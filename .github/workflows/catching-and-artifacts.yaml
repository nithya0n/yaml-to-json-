name: Caching and Artifacts
on: [workflow_dispatch]

jobs:
  use-axios:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4  # Also update this to latest
      
      # 2. Setup Node.js (recommended addition)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
      
      # 3. Cache node modules
      - name: Cache node modules
        id: cache-dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      # 4. Display cache status
      - name: Display Cache Output
        run: |
          echo "Cache hit: ${{ steps.cache-dependencies.outputs.cache-hit }}"
          echo 'Cache outputs: ${{ toJSON(steps.cache-dependencies.outputs) }}'
      
      # 5. Install dependencies (only if cache missed)
      - name: Install dependencies
        if: steps.cache-dependencies.outputs.cache-hit != 'true'
        run: npm ci  # Use npm ci for cleaner installs
      
      # 6. Run tests
      - name: Run Tests
        run: npm test
      
      # 7. Upload coverage report (FIXED)
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4  # ← UPDATED
        if: always()
        with:
          name: code-coverage-report
          path: coverage/
          retention-days: 10
      
      # 8. Download and verify (FIXED)
      - name: Download Code Coverage
        uses: actions/download-artifact@v4  # ← UPDATED
        with:
          name: code-coverage-report
          path: downloaded-coverage/
      
      # 9. List files
      - name: List downloaded files
        run: |
          ls -la
          echo "--- Coverage Report ---"
          ls -la downloaded-coverage/
      
      # 10. Use Axios for API call
      - name: Use Axios
        uses: actions/github-script@v6
        with:
          script: |
            const axios = require('axios');
            try {
              const res = await axios.get('https://icanhazdadjoke.com/', { 
                headers: { 
                  'Accept': 'text/plain',
                  'User-Agent': 'GitHub Actions Workflow' 
                } 
              });
              console.log('Dad Joke:', res.data);
            } catch (error) {
              console.error('API call failed:', error.message);
            }