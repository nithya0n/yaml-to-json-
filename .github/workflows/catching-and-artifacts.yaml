name: Caching and Artifacts
on: [workflow_dispatch]

jobs:
  use-axios:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout code
      - uses: actions/checkout@v4
      
      # 2. Setup Node.js with built-in caching (SIMPLIFIED)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'  # This handles caching automatically!
      
      # 3. Install dependencies (cache is handled by setup-node)
      - name: Install dependencies
        run: npm ci
      
      # 4. Display node and npm info
      - name: Display Environment Info
        run: |
          echo "Node version: $(node --version)"
          echo "NPM version: $(npm --version)"
          echo "Current directory: $(pwd)"
          ls -la
      
      # 5. Run tests
      - name: Run Tests
        run: npm test
      
      # 6. Upload coverage report (UPDATED)
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: code-coverage-report
          path: coverage/
          retention-days: 10
      
      # 7. Download and verify (UPDATED)
      - name: Download Code Coverage
        uses: actions/download-artifact@v4
        with:
          name: code-coverage-report
          path: downloaded-coverage/
      
      # 8. List files
      - name: List downloaded files
        run: |
          echo "=== Root Directory ==="
          ls -la
          echo "=== Coverage Report Directory ==="
          ls -la downloaded-coverage/
      
      # 9. Use Axios for API call
      - name: Use Axios
        uses: actions/github-script@v6
        with:
          script: |
            const axios = require('axios');
            try {
              const res = await axios.get('https://icanhazdadjoke.com/', { 
                headers: { 
                  'Accept': 'text/plain',
                  'User-Agent': 'GitHub Actions Workflow' 
                } 
              });
              console.log('üé≠ Dad Joke:', res.data);
            } catch (error) {
              console.error('‚ùå API call failed:', error.message);
            }